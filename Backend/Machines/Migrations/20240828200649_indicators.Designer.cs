// <auto-generated />
using System;
using Machines.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Machines.Migrations
{
    [DbContext(typeof(MachineContext))]
    [Migration("20240828200649_indicators")]
    partial class indicators
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Machines.Models.Indicator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Calidad")
                        .HasColumnType("float");

                    b.Property<string>("Cultivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Deriva")
                        .HasColumnType("float");

                    b.Property<double?>("Evaporacion")
                        .HasColumnType("float");

                    b.Property<double?>("HumedadGrano")
                        .HasColumnType("float");

                    b.Property<int?>("MachineDataId")
                        .HasColumnType("int");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<double?>("RindeHumedo")
                        .HasColumnType("float");

                    b.Property<double?>("RindeSeco")
                        .HasColumnType("float");

                    b.Property<double?>("Taponamiento")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MachineDataId");

                    b.HasIndex("MachineId");

                    b.ToTable("Indicators");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cultivo = "Trigo",
                            HumedadGrano = 12.5,
                            MachineId = 1,
                            RindeHumedo = 350.0,
                            RindeSeco = 300.0
                        },
                        new
                        {
                            Id = 2,
                            Calidad = 95.0,
                            Deriva = 1.2,
                            Evaporacion = 2.5,
                            MachineId = 2,
                            Taponamiento = 5.0
                        });
                });

            modelBuilder.Entity("Machines.Models.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Moving")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Machines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Company = "FarmCo",
                            Description = "Harvesting Machine A",
                            Moving = true,
                            Type = "Cosechadora"
                        },
                        new
                        {
                            Id = 2,
                            Company = "AgriTech",
                            Description = "Pulverizing Machine B",
                            Moving = false,
                            Type = "Pulverizadora"
                        });
                });

            modelBuilder.Entity("Machines.Models.MachineData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MachineId")
                        .IsUnique();

                    b.ToTable("MachineData");
                });

            modelBuilder.Entity("Machines.Models.Indicator", b =>
                {
                    b.HasOne("Machines.Models.MachineData", null)
                        .WithMany("Indicators")
                        .HasForeignKey("MachineDataId");

                    b.HasOne("Machines.Models.Machine", "Machine")
                        .WithMany("Indicators")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("Machines.Models.MachineData", b =>
                {
                    b.HasOne("Machines.Models.Machine", "Machine")
                        .WithOne("Data")
                        .HasForeignKey("Machines.Models.MachineData", "MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("Machines.Models.Machine", b =>
                {
                    b.Navigation("Data");

                    b.Navigation("Indicators");
                });

            modelBuilder.Entity("Machines.Models.MachineData", b =>
                {
                    b.Navigation("Indicators");
                });
#pragma warning restore 612, 618
        }
    }
}
